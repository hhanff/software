
** Limes
**** DONE Präsentation für Sebi
**** DONE Die FPGA Tabelle bei Google docs zu Ende führen
** See Grip
**** Valve Control 					      :OFFICE:PROJECT:
***** TODO can_control
      - Im Moment werden immer die gleichen Daten automatisch gesandt
        wenn im ctrl_reg_s das entsprechende Bit immer wieder auf '1'
        gesetzt wird. Hier könnte man sich eine Art Priorisierung
        vorstellen die sicher stellt, dass Datentypen die lange nicht
        mehr gesandt wurde in der Priorität steigen.
***** WAIT GUI
      - Wenn ich im Control Mode den Finger 2 gesteuert habe und dann
        im 1. Tab z.B. den proximal joint up button für Finger
        0  drücke wird weiterhin Finger 2 gesteuert. Erst wenn im 2.
        Tab die Finger ID auf 0 gesetzt wird kann ich im 1. Tab wieder
        vernünftig die Buttons bedienen.
        - in rev2167 geändert... abwarten.
***** TODO CAN Protocol
      - Verifizieren dass wiki und can_control.vhd überein stimmen
	- Bei den Control Parameters / Control commands stimmen die
          Längen von Byte 0 nicht mehr.
	- Bei den Druckwerten stimmt das Wiki nicht mehr.
***** TODO can_control.vhd
      - Lan Yues ports in die can_control_i/o Datentypen schmeißen
***** TODO eeprom_ctrl
      - Testen
***** TODO BLDC Motor
      - Lan Yue bitten, dass Sie den Motor über den Enable Eingang
        abstellt, wenn die Zielposition erreicht wurde. Dies
        verhindert vermutlich ein ungewolltes Loslaufen des BLDC
        Motors beim flashen des FPGAs.
	- Hier wurde die HW geändert. Die Pull Ups (?) wurden geändert,
	  so dass die Eingänge vom A4960 nun beim Flashen nicht mehr
	  floaten. Anscheinend hat das geholfen.
***** TODO GUI weiterbauen
      - Vielleicht einbauen, dass einen neue CAN ID geschrieben werden kann
      - Drucksensorwerte auswerten
      - Buttons aus der TCL Gui in die Qt Gui einbauen
      + Alle absolutencoder darstellen
	- Checken wie die Verdrahtung jetzt ist und SW seitig anpassen
      + Einbauen, dass direkt eine Stimuli Datei geschrieben wird.
***** TODO Die top Datei ausdünnen. Da ist viel Zeug drin das in eigene Entities ausgelagert werden kann
***** TODO Die pwm gen Module zusammenführen.
      - Das eine (in lib/bldc_a4960) lässt sich im 100(?)ns Bereich einstellen, dass
        andere im SeeGrip Ordner im 1us Bereich
***** TODO STORE_SETTINGS_IN_ROM
      - Diese Tabelle ins Wiki setzen
      - Wenn das entsprechende Paket via CAN gesendet wird muss im CAN
        Modul die entsprechende EEPROM Startadresse gesetzt werden.
        Dies wird im eeprom Modul erkannt und hier werden nun die
        entsprechenden Einstellungen ins EEPROM geschrieben.
      - Memory Map
        |-----------+----------+----+-----------------------------------------------------------------------------|
        |   Address | fingerID | ID | Content                                                                     |
        |-----------+----------+----+-----------------------------------------------------------------------------|
        |      0x00 |          |    | CAN ID                                                                      |
        |           |          |    | *PROGRAM_LIMITS_SENSOR_DATA_AUTO_TRANSMISSION_C*                            |
        | 0x01-0x03 |          |    | Sensor ID 0: Number of samples (1 byte), limit temperature sensors          |
        | 0x04-0x06 |          |    | Sensor ID 1: Number of samples (1 byte), limit pressure sensors pressure    |
        | 0x07-0x09 |          |    | Sensor ID 2: Number of samples (1 byte), limit pressure sensors temperature |
        | 0x0a-0x0c |          |    | Sensor ID 3: Number of samples (1 byte), limit absolute encoder             |
        |           |          |    | *ABSOLUTE_ENCODER_OFFSET_C*                                                 |
        | 0x0f-0x10 |        0 |  0 | Absolut encoder offset                                                      |
        | 0x11-0x12 |        0 |  1 | Absolut encoder offset                                                      |
        | 0x13-0x14 |        1 |  0 | Absolut encoder offset                                                      |
        | 0x15-0x16 |        1 |  1 | Absolut encoder offset                                                      |
        | 0x17-0x18 |        2 |  0 | Absolut encoder offset                                                      |
        | 0x19-0x1a |        2 |  1 | Absolut encoder offset                                                      |
        | 0x1b-0x1c |        3 |  0 | Absolut encoder offset, rotary                                              |
        |           |          |    |                                                                             |
        |           |          |    | *STORE_SETTINGS_IN_ROM_C*                                                   |
        |           |          |    | *Position control parameters*                                               |
        |           |          |    | Hier kommen wohl noch mehr Parameter hin. Für jeden Regler                  |
        |           |          |    | brauche ich einen eigenen Satz an PID Daten                                 |
        | 0x1d-0x1e |          |    | P, position control                                                         |
        | 0x1f-0x20 |          |    | D, position control                                                         |
        | 0x21-0x22 |          |    | I, position control                                                         |
        |           |          |    | *Speed control parameters*                                                  |
        | 0x23-0x24 |          |    | P, speed control                                                            |
        | 0x25 0x26 |          |    | D, speed control                                                            |
        | 0x27-0x28 |          |    | I, speed control                                                            |
        |           |          |    |                                                                             |
        |           |          |    | *Defaults for Gyger PWM settings 15 bar*                                    |
        |      0x30 |          |    | period                                                                      |
        |      0x31 |          |    | Tp                                                                          |
        |      0x32 |          |    | peak_pwm                                                                    |
        |      0x33 |          |    | Th                                                                          |
        |      0x34 |          |    | hold_pwm                                                                    |
        |      0x35 |          |    | Toff                                                                        |
        |           |          |    | *Defaults for Gyger PWM settings 20 bar*                                    |
        |      0x37 |          |    | period                                                                      |
        |      0x38 |          |    | Tp                                                                          |
        |      0x39 |          |    | peak_pwm                                                                    |
        |      0x3a |          |    | Th                                                                          |
        |      0x3b |          |    | hold_pwm                                                                    |
        |      0x3c |          |    | Toff                                                                        |
        |      0x3d |          |    | PI, position control                                                        |
        |           |          |    | *Defaults for Gyger PWM settings 25 bar*                                    |
        |      0x3e |          |    | period                                                                      |
        |      0x3f |          |    | Tp                                                                          |
        |      0x40 |          |    | peak_pwm                                                                    |
        |      0x41 |          |    | Th                                                                          |
        |      0x42 |          |    | hold_pwm                                                                    |
        |      0x43 |          |    | Toff                                                                        |
        |      0x44 |          |    | PI, position control                                                        |
        |           |          |    | *Defaults for Gyger PWM settings 30 bar*                                    |
        |      0x45 |          |    | period                                                                      |
        |      0x46 |          |    | Tp                                                                          |
        |      0x47 |          |    | peak_pwm                                                                    |
        |      0x48 |          |    | Th                                                                          |
        |      0x49 |          |    | hold_pwm                                                                    |
        |      0x4a |          |    | Toff                                                                        |
        |      0x4b |          |    | PI, position control                                                        |
        |           |          |    | *Defaults for Gyger PWM settings 35 bar*                                    |
        |      0x4c |          |    | period                                                                      |
        |      0x4d |          |    | Tp                                                                          |
        |      0x4e |          |    | peak_pwm                                                                    |
        |      0x4f |          |    | Th                                                                          |
        |      0x50 |          |    | hold_pwm                                                                    |
        |      0x51 |          |    | Toff                                                                        |
        |      0x52 |          |    | PI, position control                                                        |
        |           |          |    | *Defaults for Gyger PWM settings 40 bar*                                    |
        |      0x53 |          |    | period                                                                      |
        |      0x54 |          |    | Tp                                                                          |
        |      0x55 |          |    | peak_pwm                                                                    |
        |      0x56 |          |    | Th                                                                          |
        |      0x57 |          |    | hold_pwm                                                                    |
        |      0x58 |          |    | Toff                                                                        |
        |      0x59 |          |    | PI, position control                                                        |
        |           |          |    | *Defaults for Gyger PWM settings 45 bar*                                    |
        |      0x5a |          |    | period                                                                      |
        |      0x5b |          |    | Tp                                                                          |
        |      0x5c |          |    | peak_pwm                                                                    |
        |      0x5d |          |    | Th                                                                          |
        |      0x5e |          |    | hold_pwm                                                                    |
        |      0x5f |          |    | Toff                                                                        |
        |      0x60 |          |    | PI, position control                                                        |
        |-----------+----------+----+-----------------------------------------------------------------------------|
	EEPROM write
	- Die jetzige Implementierung des write Vorgangs erfordert für
	  jeden neuen Datensatz eine neue Statemaschine
	  -> Unübersichtlich
	  -> Fehleranfällig
	  -> Zeitaufwändig
	Überlegungen
	- Es soll möglich sein maximal 8 Byte auf einmal zu schreiben
	  - Dafür müssen dem Modul die folgenden Parameter übergeben
	    werden:
	    1) Startadresse
	    2) Größe des Datenclusters (0...7 / 1...8?)
	    2) Alternativ Start- und Endadresse
	    3) Datenarray mit 8 Bytes Daten
	    4) Start
***** TODO valve_control.tcl
      - Einbauen, dass eine neue CAN ID auch vom Programm übernommen wird.
***** TODO CAN
      - Die Änderungen an dem CAN Modul in den trunk Zweig zurückportieren
***** TODO Signalnamen
      - Die Signalnamen in top überarbeiten. Gerad die, die von und zu
        Valve_Control.vhd gehen/kommen
***** TODO Messen wann das Ventil öffnet
      - Messung über Strom (mit Hilfe der Strommesszangen)
	- Gesamtstromaufnahme
	- Strom der zur Spule geht
      - Messung mit Hilfe einer Kamera
	- Vermutlich keine Kamera im Haus die schnell genut ist.
	- Vermutlich schwierig, die Bilder mit dem Anlegen des PWMs zu
          synchronisieren, um die zeilitche Differenz zwischen dem
          Anlegen des PWMs und dem Öffnen des Ventils zu bestimmen.
      - Messung mit Hilfe einer Volumenänderung
	- Evtl. ungenau?
***** WAIT Referenzposition
      - Nach dem Startup die Aktuelle Position als setpoint für die
       	Regler laden
       	- Das wurde am 04.09. geändert. Hier beobachten ob das auch tut.
       	- Das wurde von LY wieder rausgenommen. -> Fragen warum.
	  - EMail am 16.10. geschrieben.
***** WAIT Absolut Position Sensor -> SSI Modul multipl
